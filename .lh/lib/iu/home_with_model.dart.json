{
    "sourceFile": "lib/iu/home_with_model.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 57,
            "patches": [
                {
                    "date": 1669680330497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1669680356538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,18 +7,18 @@\n import 'package:provider/provider.dart';\n \n import '../utils/custom_widgets/custom_textfield.dart';\n \n-class MyHomePage extends StatefulWidget {\n-  const MyHomePage({\n+class HomeWithModel extends StatefulWidget {\n+  const HomeWithModel({\n     super.key,\n   });\n \n   @override\n-  State<MyHomePage> createState() => _MyHomePageState();\n+  State<HomeWithModel> createState() => _HomeWithModelState();\n }\n \n-class _MyHomePageState extends State<MyHomePage> {\n+class _HomeWithModelState extends State<HomeWithModel> {\n   @override\n   void initState() {\n     context.read<ExhibitionModel>().getExhibitList();\n     super.initState();\n"
                },
                {
                    "date": 1669680660900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,97 +57,90 @@\n                   textInputAction: TextInputAction.done),\n               20.vSpace,\n               SingleChildScrollView(\n                 child: SizedBox(\n-                  height: context.heightPx * 0.75,\n-                  child: FutureBuilder(\n-                      future: context.read<ExhibitionModel>().getExhibitList(),\n-                      builder: (BuildContext context, AsyncSnapshot snapshot) {\n-                        if (snapshot.connectionState ==\n-                            ConnectionState.waiting) {\n-                          return const Center(\n-                              child: CircularProgressIndicator());\n-                        } else if (snapshot.hasData) {\n-                          return ListView.builder(\n-                              shrinkWrap: true,\n-                              itemCount: snapshot.data.length,\n-                              itemBuilder: (BuildContext context, int index) {\n-                                return Column(\n-                                  crossAxisAlignment: CrossAxisAlignment.start,\n-                                  children: [\n-                                    HeaderTwo(\n-                                        text: snapshot.data[index]['title']),\n-                                    Container(\n-                                      height: context.heightPx * 0.15,\n-                                      decoration: BoxDecoration(\n-                                          color: Colors.black.withOpacity(0.06),\n-                                          borderRadius:\n-                                              BorderRadius.circular(10)),\n-                                      child: Padding(\n-                                        padding: const EdgeInsets.all(8.0),\n-                                        child: Column(\n-                                          children: [\n-                                            Expanded(\n-                                              child: ListView.builder(\n-                                                  physics:\n-                                                      const BouncingScrollPhysics(),\n-                                                  scrollDirection:\n-                                                      Axis.horizontal,\n-                                                  shrinkWrap: true,\n-                                                  itemCount: snapshot\n-                                                      .data[index]['images']\n-                                                      .length,\n-                                                  itemBuilder:\n-                                                      (BuildContext context,\n-                                                          int index) {\n-                                                    return Row(\n-                                                      children: [\n-                                                        Container(\n-                                                            height: context\n-                                                                    .heightPx *\n-                                                                0.13,\n-                                                            width:\n-                                                                //  100,\n-                                                                context.widthPx *\n-                                                                    0.25,\n-                                                            decoration: BoxDecoration(\n-                                                                color: Colors\n-                                                                    .red\n-                                                                    .withOpacity(\n-                                                                        0.6),\n-                                                                borderRadius:\n-                                                                    BorderRadius\n-                                                                        .circular(\n-                                                                            10)),\n-                                                            child:\n-                                                                Image.network(\n-                                                              snapshot.data[\n-                                                                          index]\n-                                                                      ['images']\n-                                                                  [index],\n-                                                              fit: BoxFit.cover,\n-                                                            )),\n-                                                        10.hSpace\n-                                                      ],\n-                                                    );\n-                                                  }),\n-                                            ),\n-                                          ],\n-                                        ),\n+                    height: context.heightPx * 0.75,\n+                    child:\n+                        // FutureBuilder(\n+                        //     future: context.read<ExhibitionModel>().getExhibitList(),\n+                        //     builder: (BuildContext context, AsyncSnapshot snapshot) {\n+                        //       if (snapshot.connectionState ==\n+                        //           ConnectionState.waiting) {\n+                        //         return const Center(\n+                        //             child: CircularProgressIndicator());\n+                        //       } else if (snapshot.hasData) {\n+                        //         return\n+                        ListView.builder(\n+                            shrinkWrap: true,\n+                            itemCount: 10,\n+                            itemBuilder: (BuildContext context, int index) {\n+                              return Column(\n+                                crossAxisAlignment: CrossAxisAlignment.start,\n+                                children: [\n+                                  HeaderTwo(text: \"Title\"),\n+                                  Container(\n+                                    height: context.heightPx * 0.15,\n+                                    decoration: BoxDecoration(\n+                                        color: Colors.black.withOpacity(0.06),\n+                                        borderRadius:\n+                                            BorderRadius.circular(10)),\n+                                    child: Padding(\n+                                      padding: const EdgeInsets.all(8.0),\n+                                      child: Column(\n+                                        children: [\n+                                          Expanded(\n+                                            child: ListView.builder(\n+                                                physics:\n+                                                    const BouncingScrollPhysics(),\n+                                                scrollDirection:\n+                                                    Axis.horizontal,\n+                                                shrinkWrap: true,\n+                                                itemCount: 10,\n+                                                itemBuilder:\n+                                                    (BuildContext context,\n+                                                        int index) {\n+                                                  return Row(\n+                                                    children: [\n+                                                      Container(\n+                                                          height:\n+                                                              context.heightPx *\n+                                                                  0.13,\n+                                                          width:\n+                                                              //  100,\n+                                                              context.widthPx *\n+                                                                  0.25,\n+                                                          decoration: BoxDecoration(\n+                                                              color: Colors.red\n+                                                                  .withOpacity(\n+                                                                      0.6),\n+                                                              borderRadius:\n+                                                                  BorderRadius\n+                                                                      .circular(\n+                                                                          10)),\n+                                                          child: NormalText(\n+                                                              text:\n+                                                                  'Ye sis me')),\n+                                                      10.hSpace\n+                                                    ],\n+                                                  );\n+                                                }),\n+                                          ),\n+                                        ],\n                                       ),\n                                     ),\n-                                    10.vSpace\n-                                  ],\n-                                );\n-                              });\n-                        } else if (snapshot.hasData) {\n-                          return Center(\n-                            child: NormalText(text: snapshot.error.toString()),\n-                          );\n-                        }\n-                        return const SizedBox();\n-                      }),\n-                ),\n+                                  ),\n+                                  10.vSpace\n+                                ],\n+                              );\n+                            })\n+                    //   } else if (snapshot.hasData) {\n+                    //     return Center(\n+                    //       child: NormalText(text: snapshot.error.toString()),\n+                    //     );\n+                    //   }\n+                    //   return const SizedBox();\n+                    // }),\n+                    ),\n               ),\n             ],\n           ),\n         ),\n"
                },
                {
                    "date": 1669680759532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,81 +58,65 @@\n               20.vSpace,\n               SingleChildScrollView(\n                 child: SizedBox(\n                     height: context.heightPx * 0.75,\n-                    child:\n-                        // FutureBuilder(\n-                        //     future: context.read<ExhibitionModel>().getExhibitList(),\n-                        //     builder: (BuildContext context, AsyncSnapshot snapshot) {\n-                        //       if (snapshot.connectionState ==\n-                        //           ConnectionState.waiting) {\n-                        //         return const Center(\n-                        //             child: CircularProgressIndicator());\n-                        //       } else if (snapshot.hasData) {\n-                        //         return\n-                        ListView.builder(\n-                            shrinkWrap: true,\n-                            itemCount: 10,\n-                            itemBuilder: (BuildContext context, int index) {\n-                              return Column(\n-                                crossAxisAlignment: CrossAxisAlignment.start,\n-                                children: [\n-                                  HeaderTwo(text: \"Title\"),\n-                                  Container(\n-                                    height: context.heightPx * 0.15,\n-                                    decoration: BoxDecoration(\n-                                        color: Colors.black.withOpacity(0.06),\n-                                        borderRadius:\n-                                            BorderRadius.circular(10)),\n-                                    child: Padding(\n-                                      padding: const EdgeInsets.all(8.0),\n-                                      child: Column(\n-                                        children: [\n-                                          Expanded(\n-                                            child: ListView.builder(\n-                                                physics:\n-                                                    const BouncingScrollPhysics(),\n-                                                scrollDirection:\n-                                                    Axis.horizontal,\n-                                                shrinkWrap: true,\n-                                                itemCount: 10,\n-                                                itemBuilder:\n-                                                    (BuildContext context,\n-                                                        int index) {\n-                                                  return Row(\n-                                                    children: [\n-                                                      Container(\n-                                                          height:\n-                                                              context.heightPx *\n-                                                                  0.13,\n-                                                          width:\n-                                                              //  100,\n-                                                              context.widthPx *\n-                                                                  0.25,\n-                                                          decoration: BoxDecoration(\n-                                                              color: Colors.red\n-                                                                  .withOpacity(\n-                                                                      0.6),\n-                                                              borderRadius:\n-                                                                  BorderRadius\n-                                                                      .circular(\n-                                                                          10)),\n-                                                          child: NormalText(\n-                                                              text:\n-                                                                  'Ye sis me')),\n-                                                      10.hSpace\n-                                                    ],\n-                                                  );\n-                                                }),\n-                                          ),\n-                                        ],\n+                    child: ListView.builder(\n+                        shrinkWrap: true,\n+                        itemCount: 10,\n+                        itemBuilder: (BuildContext context, int index) {\n+                          return Column(\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              HeaderTwo(text: \"Title\"),\n+                              Container(\n+                                height: context.heightPx * 0.15,\n+                                decoration: BoxDecoration(\n+                                    color: Colors.black.withOpacity(0.06),\n+                                    borderRadius: BorderRadius.circular(10)),\n+                                child: Padding(\n+                                  padding: const EdgeInsets.all(8.0),\n+                                  child: Column(\n+                                    children: [\n+                                      Expanded(\n+                                        child: ListView.builder(\n+                                            physics:\n+                                                const BouncingScrollPhysics(),\n+                                            scrollDirection: Axis.horizontal,\n+                                            shrinkWrap: true,\n+                                            itemCount: 10,\n+                                            itemBuilder: (BuildContext context,\n+                                                int index) {\n+                                              return Row(\n+                                                children: [\n+                                                  Container(\n+                                                      height: context.heightPx *\n+                                                          0.13,\n+                                                      width:\n+                                                          //  100,\n+                                                          context.widthPx *\n+                                                              0.25,\n+                                                      decoration: BoxDecoration(\n+                                                          color: Colors.red\n+                                                              .withOpacity(0.6),\n+                                                          borderRadius:\n+                                                              BorderRadius\n+                                                                  .circular(\n+                                                                      10)),\n+                                                      child: NormalText(\n+                                                          text: 'Ye sis me')),\n+                                                  10.hSpace\n+                                                ],\n+                                              );\n+                                            }),\n                                       ),\n-                                    ),\n+                                    ],\n                                   ),\n-                                  10.vSpace\n-                                ],\n-                              );\n-                            })\n+                                ),\n+                              ),\n+                              10.vSpace\n+                            ],\n+                          );\n+                        })\n                     //   } else if (snapshot.hasData) {\n                     //     return Center(\n                     //       child: NormalText(text: snapshot.error.toString()),\n                     //     );\n"
                },
                {
                    "date": 1669680765860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,17 +114,9 @@\n                               ),\n                               10.vSpace\n                             ],\n                           );\n-                        })\n-                    //   } else if (snapshot.hasData) {\n-                    //     return Center(\n-                    //       child: NormalText(text: snapshot.error.toString()),\n-                    //     );\n-                    //   }\n-                    //   return const SizedBox();\n-                    // }),\n-                    ),\n+                        })),\n               ),\n             ],\n           ),\n         ),\n"
                },
                {
                    "date": 1669680811329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,104 +28,109 @@\n   final scaffoldKey = GlobalKey<ScaffoldState>();\n \n   @override\n   Widget build(BuildContext context) {\n-    return SafeArea(\n-      child: Scaffold(\n-        key: scaffoldKey,\n-        // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n-        body: Padding(\n-          padding: const EdgeInsets.only(top: 20, right: 20, left: 20),\n-          child: ListView(\n-            children: <Widget>[\n-              15.vSpace,\n-              HeaderOne(\n-                text: 'Exhibition List',\n-                textAlign: TextAlign.center,\n-                size: 24,\n-              ),\n-              CustomTextField(\n-                  textInputType: TextInputType.text,\n-                  textController: searchController,\n-                  autoFocus: false,\n-                  isPassword: false,\n-                  hintText: 'Search',\n-                  height: 52,\n-                  suffixIcon: const Icon(\n-                    Icons.search,\n-                    color: Colors.black54,\n-                  ),\n-                  textInputAction: TextInputAction.done),\n-              20.vSpace,\n-              SingleChildScrollView(\n-                child: SizedBox(\n-                    height: context.heightPx * 0.75,\n-                    child: ListView.builder(\n-                        shrinkWrap: true,\n-                        itemCount: 10,\n-                        itemBuilder: (BuildContext context, int index) {\n-                          return Column(\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              HeaderTwo(text: \"Title\"),\n-                              Container(\n-                                height: context.heightPx * 0.15,\n-                                decoration: BoxDecoration(\n-                                    color: Colors.black.withOpacity(0.06),\n-                                    borderRadius: BorderRadius.circular(10)),\n-                                child: Padding(\n-                                  padding: const EdgeInsets.all(8.0),\n-                                  child: Column(\n-                                    children: [\n-                                      Expanded(\n-                                        child: ListView.builder(\n-                                            physics:\n-                                                const BouncingScrollPhysics(),\n-                                            scrollDirection: Axis.horizontal,\n-                                            shrinkWrap: true,\n-                                            itemCount: 10,\n-                                            itemBuilder: (BuildContext context,\n-                                                int index) {\n-                                              return Row(\n-                                                children: [\n-                                                  Container(\n-                                                      height: context.heightPx *\n-                                                          0.13,\n-                                                      width:\n-                                                          //  100,\n-                                                          context.widthPx *\n-                                                              0.25,\n-                                                      decoration: BoxDecoration(\n-                                                          color: Colors.red\n-                                                              .withOpacity(0.6),\n-                                                          borderRadius:\n-                                                              BorderRadius\n-                                                                  .circular(\n-                                                                      10)),\n-                                                      child: NormalText(\n-                                                          text: 'Ye sis me')),\n-                                                  10.hSpace\n-                                                ],\n-                                              );\n-                                            }),\n-                                      ),\n-                                    ],\n+    return Consumer<ExhibitionModel>(builder: (context, data, _) {\n+      return SafeArea(\n+        child: Scaffold(\n+          key: scaffoldKey,\n+          // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n+          body: Padding(\n+            padding: const EdgeInsets.only(top: 20, right: 20, left: 20),\n+            child: ListView(\n+              children: <Widget>[\n+                15.vSpace,\n+                HeaderOne(\n+                  text: 'Exhibition List',\n+                  textAlign: TextAlign.center,\n+                  size: 24,\n+                ),\n+                CustomTextField(\n+                    textInputType: TextInputType.text,\n+                    textController: searchController,\n+                    autoFocus: false,\n+                    isPassword: false,\n+                    hintText: 'Search',\n+                    height: 52,\n+                    suffixIcon: const Icon(\n+                      Icons.search,\n+                      color: Colors.black54,\n+                    ),\n+                    textInputAction: TextInputAction.done),\n+                20.vSpace,\n+                SingleChildScrollView(\n+                  child: SizedBox(\n+                      height: context.heightPx * 0.75,\n+                      child: ListView.builder(\n+                          shrinkWrap: true,\n+                          itemCount: 10,\n+                          itemBuilder: (BuildContext context, int index) {\n+                            return Column(\n+                              crossAxisAlignment: CrossAxisAlignment.start,\n+                              children: [\n+                                HeaderTwo(text: \"Title\"),\n+                                Container(\n+                                  height: context.heightPx * 0.15,\n+                                  decoration: BoxDecoration(\n+                                      color: Colors.black.withOpacity(0.06),\n+                                      borderRadius: BorderRadius.circular(10)),\n+                                  child: Padding(\n+                                    padding: const EdgeInsets.all(8.0),\n+                                    child: Column(\n+                                      children: [\n+                                        Expanded(\n+                                          child: ListView.builder(\n+                                              physics:\n+                                                  const BouncingScrollPhysics(),\n+                                              scrollDirection: Axis.horizontal,\n+                                              shrinkWrap: true,\n+                                              itemCount: 10,\n+                                              itemBuilder:\n+                                                  (BuildContext context,\n+                                                      int index) {\n+                                                return Row(\n+                                                  children: [\n+                                                    Container(\n+                                                        height:\n+                                                            context.heightPx *\n+                                                                0.13,\n+                                                        width:\n+                                                            //  100,\n+                                                            context.widthPx *\n+                                                                0.25,\n+                                                        decoration: BoxDecoration(\n+                                                            color: Colors.red\n+                                                                .withOpacity(\n+                                                                    0.6),\n+                                                            borderRadius:\n+                                                                BorderRadius\n+                                                                    .circular(\n+                                                                        10)),\n+                                                        child: NormalText(\n+                                                            text: 'Ye sis me')),\n+                                                    10.hSpace\n+                                                  ],\n+                                                );\n+                                              }),\n+                                        ),\n+                                      ],\n+                                    ),\n                                   ),\n                                 ),\n-                              ),\n-                              10.vSpace\n-                            ],\n-                          );\n-                        })),\n-              ),\n-            ],\n+                                10.vSpace\n+                              ],\n+                            );\n+                          })),\n+                ),\n+              ],\n+            ),\n           ),\n+          floatingActionButton: FloatingActionButton(\n+            onPressed: () {},\n+            tooltip: 'Increment',\n+            child: const Icon(Icons.add),\n+          ), // This trailing comma makes auto-formatting nicer for build methods.\n         ),\n-        floatingActionButton: FloatingActionButton(\n-          onPressed: () {},\n-          tooltip: 'Increment',\n-          child: const Icon(Icons.add),\n-        ), // This trailing comma makes auto-formatting nicer for build methods.\n-      ),\n-    );\n+      );\n+    });\n   }\n }\n"
                },
                {
                    "date": 1669680838208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n                           itemBuilder: (BuildContext context, int index) {\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: \"Title\"),\n+                                HeaderTwo(text: data.exhibit!.title),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n"
                },
                {
                    "date": 1669680900762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import 'package:exhibition_task/utils/extensions.dart';\n import 'package:exhibition_task/utils/text/header_1.dart';\n import 'package:exhibition_task/utils/text/header_2.dart';\n-import 'package:exhibition_task/utils/text/normal_text.dart';\n import 'package:exhibition_task/view_models/exhibit_view_model.dart';\n import 'package:flutter/material.dart';\n import 'package:provider/provider.dart';\n \n@@ -104,10 +103,11 @@\n                                                             borderRadius:\n                                                                 BorderRadius\n                                                                     .circular(\n                                                                         10)),\n-                                                        child: NormalText(\n-                                                            text: 'Ye sis me')),\n+                                                        child: Image.asset(data\n+                                                            .exhibit!\n+                                                            .images[index])),\n                                                     10.hSpace\n                                                   ],\n                                                 );\n                                               }),\n"
                },
                {
                    "date": 1669680948942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,11 +103,12 @@\n                                                             borderRadius:\n                                                                 BorderRadius\n                                                                     .circular(\n                                                                         10)),\n-                                                        child: Image.asset(data\n-                                                            .exhibit!\n-                                                            .images[index])),\n+                                                        child: Image.network(\n+                                                            data.exhibit!\n+                                                                    .images[\n+                                                                index])),\n                                                     10.hSpace\n                                                   ],\n                                                 );\n                                               }),\n"
                },
                {
                    "date": 1669681001731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,11 +104,12 @@\n                                                                 BorderRadius\n                                                                     .circular(\n                                                                         10)),\n                                                         child: Image.network(\n-                                                            data.exhibit!\n-                                                                    .images[\n-                                                                index])),\n+                                                          data.exhibit!\n+                                                              .images[index],\n+                                                          fit: BoxFit.cover,\n+                                                        )),\n                                                     10.hSpace\n                                                   ],\n                                                 );\n                                               }),\n"
                },
                {
                    "date": 1669681038663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,10 @@\n                                               physics:\n                                                   const BouncingScrollPhysics(),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n-                                              itemCount: 10,\n+                                              itemCount:\n+                                                  data.exhibit!.images.length,\n                                               itemBuilder:\n                                                   (BuildContext context,\n                                                       int index) {\n                                                 return Row(\n"
                },
                {
                    "date": 1669681070912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,11 @@\n                                       children: [\n                                         Expanded(\n                                           child: ListView.builder(\n                                               physics:\n-                                                  const BouncingScrollPhysics(),\n+                                                  const AlwaysScrollableScrollPhysics(\n+                                                      parent:\n+                                                          BouncingScrollPhysics()),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n                                               itemCount:\n                                                   data.exhibit!.images.length,\n"
                },
                {
                    "date": 1669681104953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                           itemBuilder: (BuildContext context, int index) {\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.exhibit!.title),\n+                                HeaderTwo(text: data.exhibit!.title[index]),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n"
                },
                {
                    "date": 1669681118758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                           itemBuilder: (BuildContext context, int index) {\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.exhibit!.title[index]),\n+                                HeaderTwo(text: data.exhibit!.title),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n"
                },
                {
                    "date": 1669683288431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:exhibition_task/model/exhibit_model.dart';\n import 'package:exhibition_task/utils/extensions.dart';\n import 'package:exhibition_task/utils/text/header_1.dart';\n import 'package:exhibition_task/utils/text/header_2.dart';\n import 'package:exhibition_task/view_models/exhibit_view_model.dart';\n@@ -27,9 +28,9 @@\n   final scaffoldKey = GlobalKey<ScaffoldState>();\n \n   @override\n   Widget build(BuildContext context) {\n-    return Consumer<ExhibitionModel>(builder: (context, data, _) {\n+    return Consumer<Exhibit>(builder: (context, data, _) {\n       return SafeArea(\n         child: Scaffold(\n           key: scaffoldKey,\n           // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n@@ -65,9 +66,9 @@\n                           itemBuilder: (BuildContext context, int index) {\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.exhibit!.title),\n+                                HeaderTwo(text: data.),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n"
                },
                {
                    "date": 1669683313207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n                           itemBuilder: (BuildContext context, int index) {\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.),\n+                                HeaderTwo(text: data.title),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n@@ -84,10 +84,9 @@\n                                                       parent:\n                                                           BouncingScrollPhysics()),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n-                                              itemCount:\n-                                                  data.exhibit!.images.length,\n+                                              itemCount: data.images.length,\n                                               itemBuilder:\n                                                   (BuildContext context,\n                                                       int index) {\n                                                 return Row(\n@@ -108,10 +107,9 @@\n                                                                 BorderRadius\n                                                                     .circular(\n                                                                         10)),\n                                                         child: Image.network(\n-                                                          data.exhibit!\n-                                                              .images[index],\n+                                                          data.images[index],\n                                                           fit: BoxFit.cover,\n                                                         )),\n                                                     10.hSpace\n                                                   ],\n"
                },
                {
                    "date": 1669683598395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import 'package:exhibition_task/model/exhibit_model.dart';\n import 'package:exhibition_task/utils/extensions.dart';\n import 'package:exhibition_task/utils/text/header_1.dart';\n import 'package:exhibition_task/utils/text/header_2.dart';\n import 'package:exhibition_task/view_models/exhibit_view_model.dart';\n@@ -28,9 +27,9 @@\n   final scaffoldKey = GlobalKey<ScaffoldState>();\n \n   @override\n   Widget build(BuildContext context) {\n-    return Consumer<Exhibit>(builder: (context, data, _) {\n+    return Consumer<ExhibitionModel>(builder: (context, data, _) {\n       return SafeArea(\n         child: Scaffold(\n           key: scaffoldKey,\n           // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n"
                },
                {
                    "date": 1669683636092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                           itemBuilder: (BuildContext context, int index) {\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.title),\n+                                HeaderTwo(text: data.exhibit!.title),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n@@ -83,9 +83,10 @@\n                                                       parent:\n                                                           BouncingScrollPhysics()),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n-                                              itemCount: data.images.length,\n+                                              itemCount:\n+                                                  data.exhibit!.images.length,\n                                               itemBuilder:\n                                                   (BuildContext context,\n                                                       int index) {\n                                                 return Row(\n@@ -106,9 +107,10 @@\n                                                                 BorderRadius\n                                                                     .circular(\n                                                                         10)),\n                                                         child: Image.network(\n-                                                          data.images[index],\n+                                                          data.exhibit!\n+                                                              .images[index],\n                                                           fit: BoxFit.cover,\n                                                         )),\n                                                     10.hSpace\n                                                   ],\n"
                },
                {
                    "date": 1669684382746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                           itemBuilder: (BuildContext context, int index) {\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.exhibit!.title),\n+                                HeaderTwo(text: data.exhibit!.title[index]),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n"
                },
                {
                    "date": 1669684405430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                           itemBuilder: (BuildContext context, int index) {\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.exhibit!.title[index]),\n+                                HeaderTwo(text: data.exhibit!.title),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n"
                },
                {
                    "date": 1669684839841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       child: ListView.builder(\n                           shrinkWrap: true,\n-                          itemCount: 10,\n+                          itemCount: data.exhibit!.title.length,\n                           itemBuilder: (BuildContext context, int index) {\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n"
                },
                {
                    "date": 1669684964306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,11 @@\n                       child: ListView.builder(\n                           shrinkWrap: true,\n                           itemCount: data.exhibit!.title.length,\n                           itemBuilder: (BuildContext context, int index) {\n+                            if (data.exhibit!.title.isEmpty) {\n+                              return const CircularProgressIndicator();\n+                            }\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n                                 HeaderTwo(text: data.exhibit!.title),\n"
                },
                {
                    "date": 1669685070916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     return Consumer<ExhibitionModel>(builder: (context, data, _) {\n       return SafeArea(\n         child: Scaffold(\n           key: scaffoldKey,\n-          // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n+          backgroundColor: Colors.lightBlue.withOpacity(0.9),\n           body: Padding(\n             padding: const EdgeInsets.only(top: 20, right: 20, left: 20),\n             child: ListView(\n               children: <Widget>[\n"
                },
                {
                    "date": 1669685086855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     return Consumer<ExhibitionModel>(builder: (context, data, _) {\n       return SafeArea(\n         child: Scaffold(\n           key: scaffoldKey,\n-          backgroundColor: Colors.lightBlue.withOpacity(0.9),\n+          // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n           body: Padding(\n             padding: const EdgeInsets.only(top: 20, right: 20, left: 20),\n             child: ListView(\n               children: <Widget>[\n"
                },
                {
                    "date": 1669686205350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,17 +60,17 @@\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       child: ListView.builder(\n                           shrinkWrap: true,\n-                          itemCount: data.exhibit!.title.length,\n+                          itemCount: data.exhibit!.length,\n                           itemBuilder: (BuildContext context, int index) {\n-                            if (data.exhibit!.title.isEmpty) {\n+                            if (data.exhibit!.isEmpty) {\n                               return const CircularProgressIndicator();\n                             }\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.exhibit!.title),\n+                                HeaderTwo(text: data.exhibit![index].title),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n@@ -86,10 +86,10 @@\n                                                       parent:\n                                                           BouncingScrollPhysics()),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n-                                              itemCount:\n-                                                  data.exhibit!.images.length,\n+                                              itemCount: data.exhibit![index]\n+                                                  .images.length,\n                                               itemBuilder:\n                                                   (BuildContext context,\n                                                       int index) {\n                                                 return Row(\n@@ -110,9 +110,9 @@\n                                                                 BorderRadius\n                                                                     .circular(\n                                                                         10)),\n                                                         child: Image.network(\n-                                                          data.exhibit!\n+                                                          data.exhibit![index]\n                                                               .images[index],\n                                                           fit: BoxFit.cover,\n                                                         )),\n                                                     10.hSpace\n"
                },
                {
                    "date": 1669686504772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,17 +60,17 @@\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       child: ListView.builder(\n                           shrinkWrap: true,\n-                          itemCount: data.exhibit!.length,\n+                          itemCount: data.exhibit.length,\n                           itemBuilder: (BuildContext context, int index) {\n-                            if (data.exhibit!.isEmpty) {\n+                            if (data.exhibit.isEmpty) {\n                               return const CircularProgressIndicator();\n                             }\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.exhibit![index].title),\n+                                HeaderTwo(text: data.exhibit[index].title),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n@@ -86,10 +86,10 @@\n                                                       parent:\n                                                           BouncingScrollPhysics()),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n-                                              itemCount: data.exhibit![index]\n-                                                  .images.length,\n+                                              itemCount: data\n+                                                  .exhibit[index].images.length,\n                                               itemBuilder:\n                                                   (BuildContext context,\n                                                       int index) {\n                                                 return Row(\n@@ -110,9 +110,9 @@\n                                                                 BorderRadius\n                                                                     .circular(\n                                                                         10)),\n                                                         child: Image.network(\n-                                                          data.exhibit![index]\n+                                                          data.exhibit[index]\n                                                               .images[index],\n                                                           fit: BoxFit.cover,\n                                                         )),\n                                                     10.hSpace\n"
                },
                {
                    "date": 1669686570972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,17 +60,17 @@\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       child: ListView.builder(\n                           shrinkWrap: true,\n-                          itemCount: data.exhibit.length,\n+                          itemCount: data.exhibit!.length,\n                           itemBuilder: (BuildContext context, int index) {\n-                            if (data.exhibit.isEmpty) {\n+                            if (data.exhibit!.isEmpty) {\n                               return const CircularProgressIndicator();\n                             }\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.exhibit[index].title),\n+                                HeaderTwo(text: data.exhibit![index].title),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n@@ -86,10 +86,10 @@\n                                                       parent:\n                                                           BouncingScrollPhysics()),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n-                                              itemCount: data\n-                                                  .exhibit[index].images.length,\n+                                              itemCount: data.exhibit![index]\n+                                                  .images.length,\n                                               itemBuilder:\n                                                   (BuildContext context,\n                                                       int index) {\n                                                 return Row(\n@@ -110,9 +110,9 @@\n                                                                 BorderRadius\n                                                                     .circular(\n                                                                         10)),\n                                                         child: Image.network(\n-                                                          data.exhibit[index]\n+                                                          data.exhibit![index]\n                                                               .images[index],\n                                                           fit: BoxFit.cover,\n                                                         )),\n                                                     10.hSpace\n"
                },
                {
                    "date": 1669686711935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,10 @@\n                                                       parent:\n                                                           BouncingScrollPhysics()),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n-                                              itemCount: data.exhibit![index]\n-                                                  .images.length,\n+                                              itemCount: data.exhibit!.length\n+                                                \n                                               itemBuilder:\n                                                   (BuildContext context,\n                                                       int index) {\n                                                 return Row(\n"
                },
                {
                    "date": 1669686736202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,10 @@\n                                                       parent:\n                                                           BouncingScrollPhysics()),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n-                                              itemCount: data.exhibit!.length\n-                                                \n+                                              itemCount: data.exhibit![index]\n+                                                  .images.length,\n                                               itemBuilder:\n                                                   (BuildContext context,\n                                                       int index) {\n                                                 return Row(\n"
                },
                {
                    "date": 1669686924576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,17 +60,17 @@\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       child: ListView.builder(\n                           shrinkWrap: true,\n-                          itemCount: data.exhibit!.length,\n+                          itemCount: data.exhibit.length,\n                           itemBuilder: (BuildContext context, int index) {\n-                            if (data.exhibit!.isEmpty) {\n+                            if (data.exhibit.isEmpty) {\n                               return const CircularProgressIndicator();\n                             }\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n-                                HeaderTwo(text: data.exhibit![index].title),\n+                                HeaderTwo(text: data.exhibit[index].title),\n                                 Container(\n                                   height: context.heightPx * 0.15,\n                                   decoration: BoxDecoration(\n                                       color: Colors.black.withOpacity(0.06),\n@@ -86,10 +86,10 @@\n                                                       parent:\n                                                           BouncingScrollPhysics()),\n                                               scrollDirection: Axis.horizontal,\n                                               shrinkWrap: true,\n-                                              itemCount: data.exhibit![index]\n-                                                  .images.length,\n+                                              itemCount: data\n+                                                  .exhibit[index].images.length,\n                                               itemBuilder:\n                                                   (BuildContext context,\n                                                       int index) {\n                                                 return Row(\n@@ -110,9 +110,9 @@\n                                                                 BorderRadius\n                                                                     .circular(\n                                                                         10)),\n                                                         child: Image.network(\n-                                                          data.exhibit![index]\n+                                                          data.exhibit[index]\n                                                               .images[index],\n                                                           fit: BoxFit.cover,\n                                                         )),\n                                                     10.hSpace\n"
                },
                {
                    "date": 1669687048499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,13 +131,8 @@\n                 ),\n               ],\n             ),\n           ),\n-          floatingActionButton: FloatingActionButton(\n-            onPressed: () {},\n-            tooltip: 'Increment',\n-            child: const Icon(Icons.add),\n-          ), // This trailing comma makes auto-formatting nicer for build methods.\n         ),\n       );\n     });\n   }\n"
                },
                {
                    "date": 1669687240029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,70 +64,73 @@\n                           itemCount: data.exhibit.length,\n                           itemBuilder: (BuildContext context, int index) {\n                             if (data.exhibit.isEmpty) {\n                               return const CircularProgressIndicator();\n-                            }\n-                            return Column(\n-                              crossAxisAlignment: CrossAxisAlignment.start,\n-                              children: [\n-                                HeaderTwo(text: data.exhibit[index].title),\n-                                Container(\n-                                  height: context.heightPx * 0.15,\n-                                  decoration: BoxDecoration(\n-                                      color: Colors.black.withOpacity(0.06),\n-                                      borderRadius: BorderRadius.circular(10)),\n-                                  child: Padding(\n-                                    padding: const EdgeInsets.all(8.0),\n-                                    child: Column(\n-                                      children: [\n-                                        Expanded(\n-                                          child: ListView.builder(\n-                                              physics:\n-                                                  const AlwaysScrollableScrollPhysics(\n-                                                      parent:\n-                                                          BouncingScrollPhysics()),\n-                                              scrollDirection: Axis.horizontal,\n-                                              shrinkWrap: true,\n-                                              itemCount: data\n-                                                  .exhibit[index].images.length,\n-                                              itemBuilder:\n-                                                  (BuildContext context,\n-                                                      int index) {\n-                                                return Row(\n-                                                  children: [\n-                                                    Container(\n-                                                        height:\n-                                                            context.heightPx *\n-                                                                0.13,\n-                                                        width:\n-                                                            //  100,\n-                                                            context.widthPx *\n-                                                                0.25,\n-                                                        decoration: BoxDecoration(\n-                                                            color: Colors.red\n-                                                                .withOpacity(\n-                                                                    0.6),\n-                                                            borderRadius:\n-                                                                BorderRadius\n-                                                                    .circular(\n-                                                                        10)),\n-                                                        child: Image.network(\n-                                                          data.exhibit[index]\n-                                                              .images[index],\n-                                                          fit: BoxFit.cover,\n-                                                        )),\n-                                                    10.hSpace\n-                                                  ],\n-                                                );\n-                                              }),\n-                                        ),\n-                                      ],\n+                            } else {\n+                              return Column(\n+                                crossAxisAlignment: CrossAxisAlignment.start,\n+                                children: [\n+                                  HeaderTwo(text: data.exhibit[index].title),\n+                                  Container(\n+                                    height: context.heightPx * 0.15,\n+                                    decoration: BoxDecoration(\n+                                        color: Colors.black.withOpacity(0.06),\n+                                        borderRadius:\n+                                            BorderRadius.circular(10)),\n+                                    child: Padding(\n+                                      padding: const EdgeInsets.all(8.0),\n+                                      child: Column(\n+                                        children: [\n+                                          Expanded(\n+                                            child: ListView.builder(\n+                                                physics:\n+                                                    const AlwaysScrollableScrollPhysics(\n+                                                        parent:\n+                                                            BouncingScrollPhysics()),\n+                                                scrollDirection:\n+                                                    Axis.horizontal,\n+                                                shrinkWrap: true,\n+                                                itemCount: data.exhibit[index]\n+                                                    .images.length,\n+                                                itemBuilder:\n+                                                    (BuildContext context,\n+                                                        int index) {\n+                                                  return Row(\n+                                                    children: [\n+                                                      Container(\n+                                                          height:\n+                                                              context.heightPx *\n+                                                                  0.13,\n+                                                          width:\n+                                                              //  100,\n+                                                              context.widthPx *\n+                                                                  0.25,\n+                                                          decoration: BoxDecoration(\n+                                                              color: Colors.red\n+                                                                  .withOpacity(\n+                                                                      0.6),\n+                                                              borderRadius:\n+                                                                  BorderRadius\n+                                                                      .circular(\n+                                                                          10)),\n+                                                          child: Image.network(\n+                                                            data.exhibit[index]\n+                                                                .images[index],\n+                                                            fit: BoxFit.cover,\n+                                                          )),\n+                                                      10.hSpace\n+                                                    ],\n+                                                  );\n+                                                }),\n+                                          ),\n+                                        ],\n+                                      ),\n                                     ),\n                                   ),\n-                                ),\n-                                10.vSpace\n-                              ],\n-                            );\n+                                  10.vSpace\n+                                ],\n+                              );\n+                            }\n                           })),\n                 ),\n               ],\n             ),\n"
                },
                {
                    "date": 1669687285864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,80 +58,87 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n-                      child: ListView.builder(\n-                          shrinkWrap: true,\n-                          itemCount: data.exhibit.length,\n-                          itemBuilder: (BuildContext context, int index) {\n-                            if (data.exhibit.isEmpty) {\n-                              return const CircularProgressIndicator();\n-                            } else {\n-                              return Column(\n-                                crossAxisAlignment: CrossAxisAlignment.start,\n-                                children: [\n-                                  HeaderTwo(text: data.exhibit[index].title),\n-                                  Container(\n-                                    height: context.heightPx * 0.15,\n-                                    decoration: BoxDecoration(\n-                                        color: Colors.black.withOpacity(0.06),\n-                                        borderRadius:\n-                                            BorderRadius.circular(10)),\n-                                    child: Padding(\n-                                      padding: const EdgeInsets.all(8.0),\n-                                      child: Column(\n-                                        children: [\n-                                          Expanded(\n-                                            child: ListView.builder(\n-                                                physics:\n-                                                    const AlwaysScrollableScrollPhysics(\n-                                                        parent:\n-                                                            BouncingScrollPhysics()),\n-                                                scrollDirection:\n-                                                    Axis.horizontal,\n-                                                shrinkWrap: true,\n-                                                itemCount: data.exhibit[index]\n-                                                    .images.length,\n-                                                itemBuilder:\n-                                                    (BuildContext context,\n-                                                        int index) {\n-                                                  return Row(\n-                                                    children: [\n-                                                      Container(\n-                                                          height:\n-                                                              context.heightPx *\n-                                                                  0.13,\n-                                                          width:\n-                                                              //  100,\n-                                                              context.widthPx *\n-                                                                  0.25,\n-                                                          decoration: BoxDecoration(\n-                                                              color: Colors.red\n-                                                                  .withOpacity(\n-                                                                      0.6),\n-                                                              borderRadius:\n-                                                                  BorderRadius\n-                                                                      .circular(\n-                                                                          10)),\n-                                                          child: Image.network(\n-                                                            data.exhibit[index]\n-                                                                .images[index],\n-                                                            fit: BoxFit.cover,\n-                                                          )),\n-                                                      10.hSpace\n-                                                    ],\n-                                                  );\n-                                                }),\n-                                          ),\n-                                        ],\n+                      child: FutureBuilder(builder: (context, index) {\n+                        return ListView.builder(\n+                            shrinkWrap: true,\n+                            itemCount: data.exhibit.length,\n+                            itemBuilder: (BuildContext context, int index) {\n+                              if (data.exhibit.isEmpty) {\n+                                return const CircularProgressIndicator();\n+                              } else {\n+                                return Column(\n+                                  crossAxisAlignment: CrossAxisAlignment.start,\n+                                  children: [\n+                                    HeaderTwo(text: data.exhibit[index].title),\n+                                    Container(\n+                                      height: context.heightPx * 0.15,\n+                                      decoration: BoxDecoration(\n+                                          color: Colors.black.withOpacity(0.06),\n+                                          borderRadius:\n+                                              BorderRadius.circular(10)),\n+                                      child: Padding(\n+                                        padding: const EdgeInsets.all(8.0),\n+                                        child: Column(\n+                                          children: [\n+                                            Expanded(\n+                                              child: ListView.builder(\n+                                                  physics:\n+                                                      const AlwaysScrollableScrollPhysics(\n+                                                          parent:\n+                                                              BouncingScrollPhysics()),\n+                                                  scrollDirection:\n+                                                      Axis.horizontal,\n+                                                  shrinkWrap: true,\n+                                                  itemCount: data.exhibit[index]\n+                                                      .images.length,\n+                                                  itemBuilder:\n+                                                      (BuildContext context,\n+                                                          int index) {\n+                                                    return Row(\n+                                                      children: [\n+                                                        Container(\n+                                                            height: context\n+                                                                    .heightPx *\n+                                                                0.13,\n+                                                            width:\n+                                                                //  100,\n+                                                                context.widthPx *\n+                                                                    0.25,\n+                                                            decoration: BoxDecoration(\n+                                                                color: Colors\n+                                                                    .red\n+                                                                    .withOpacity(\n+                                                                        0.6),\n+                                                                borderRadius:\n+                                                                    BorderRadius\n+                                                                        .circular(\n+                                                                            10)),\n+                                                            child:\n+                                                                Image.network(\n+                                                              data\n+                                                                      .exhibit[\n+                                                                          index]\n+                                                                      .images[\n+                                                                  index],\n+                                                              fit: BoxFit.cover,\n+                                                            )),\n+                                                        10.hSpace\n+                                                      ],\n+                                                    );\n+                                                  }),\n+                                            ),\n+                                          ],\n+                                        ),\n                                       ),\n                                     ),\n-                                  ),\n-                                  10.vSpace\n-                                ],\n-                              );\n-                            }\n-                          })),\n+                                    10.vSpace\n+                                  ],\n+                                );\n+                              }\n+                            });\n+                      })),\n                 ),\n               ],\n             ),\n           ),\n"
                },
                {
                    "date": 1669687339022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,11 @@\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       child: FutureBuilder(builder: (context, index) {\n+                        if (data.exhibit.isEmpty) {\n+                          return const CircularProgressIndicator();\n+                        }\n                         return ListView.builder(\n                             shrinkWrap: true,\n                             itemCount: data.exhibit.length,\n                             itemBuilder: (BuildContext context, int index) {\n"
                },
                {
                    "date": 1669687400540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,11 +66,9 @@\n                         return ListView.builder(\n                             shrinkWrap: true,\n                             itemCount: data.exhibit.length,\n                             itemBuilder: (BuildContext context, int index) {\n-                              if (data.exhibit.isEmpty) {\n-                                return const CircularProgressIndicator();\n-                              } else {\n+                              {\n                                 return Column(\n                                   crossAxisAlignment: CrossAxisAlignment.start,\n                                   children: [\n                                     HeaderTwo(text: data.exhibit[index].title),\n"
                },
                {
                    "date": 1669687409562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,78 +66,71 @@\n                         return ListView.builder(\n                             shrinkWrap: true,\n                             itemCount: data.exhibit.length,\n                             itemBuilder: (BuildContext context, int index) {\n-                              {\n-                                return Column(\n-                                  crossAxisAlignment: CrossAxisAlignment.start,\n-                                  children: [\n-                                    HeaderTwo(text: data.exhibit[index].title),\n-                                    Container(\n-                                      height: context.heightPx * 0.15,\n-                                      decoration: BoxDecoration(\n-                                          color: Colors.black.withOpacity(0.06),\n-                                          borderRadius:\n-                                              BorderRadius.circular(10)),\n-                                      child: Padding(\n-                                        padding: const EdgeInsets.all(8.0),\n-                                        child: Column(\n-                                          children: [\n-                                            Expanded(\n-                                              child: ListView.builder(\n-                                                  physics:\n-                                                      const AlwaysScrollableScrollPhysics(\n-                                                          parent:\n-                                                              BouncingScrollPhysics()),\n-                                                  scrollDirection:\n-                                                      Axis.horizontal,\n-                                                  shrinkWrap: true,\n-                                                  itemCount: data.exhibit[index]\n-                                                      .images.length,\n-                                                  itemBuilder:\n-                                                      (BuildContext context,\n-                                                          int index) {\n-                                                    return Row(\n-                                                      children: [\n-                                                        Container(\n-                                                            height: context\n-                                                                    .heightPx *\n-                                                                0.13,\n-                                                            width:\n-                                                                //  100,\n-                                                                context.widthPx *\n-                                                                    0.25,\n-                                                            decoration: BoxDecoration(\n-                                                                color: Colors\n-                                                                    .red\n-                                                                    .withOpacity(\n-                                                                        0.6),\n-                                                                borderRadius:\n-                                                                    BorderRadius\n-                                                                        .circular(\n-                                                                            10)),\n-                                                            child:\n-                                                                Image.network(\n-                                                              data\n-                                                                      .exhibit[\n-                                                                          index]\n-                                                                      .images[\n-                                                                  index],\n-                                                              fit: BoxFit.cover,\n-                                                            )),\n-                                                        10.hSpace\n-                                                      ],\n-                                                    );\n-                                                  }),\n-                                            ),\n-                                          ],\n-                                        ),\n+                              return Column(\n+                                crossAxisAlignment: CrossAxisAlignment.start,\n+                                children: [\n+                                  HeaderTwo(text: data.exhibit[index].title),\n+                                  Container(\n+                                    height: context.heightPx * 0.15,\n+                                    decoration: BoxDecoration(\n+                                        color: Colors.black.withOpacity(0.06),\n+                                        borderRadius:\n+                                            BorderRadius.circular(10)),\n+                                    child: Padding(\n+                                      padding: const EdgeInsets.all(8.0),\n+                                      child: Column(\n+                                        children: [\n+                                          Expanded(\n+                                            child: ListView.builder(\n+                                                physics:\n+                                                    const AlwaysScrollableScrollPhysics(\n+                                                        parent:\n+                                                            BouncingScrollPhysics()),\n+                                                scrollDirection:\n+                                                    Axis.horizontal,\n+                                                shrinkWrap: true,\n+                                                itemCount: data.exhibit[index]\n+                                                    .images.length,\n+                                                itemBuilder:\n+                                                    (BuildContext context,\n+                                                        int index) {\n+                                                  return Row(\n+                                                    children: [\n+                                                      Container(\n+                                                          height:\n+                                                              context.heightPx *\n+                                                                  0.13,\n+                                                          width:\n+                                                              //  100,\n+                                                              context.widthPx *\n+                                                                  0.25,\n+                                                          decoration: BoxDecoration(\n+                                                              color: Colors.red\n+                                                                  .withOpacity(\n+                                                                      0.6),\n+                                                              borderRadius:\n+                                                                  BorderRadius\n+                                                                      .circular(\n+                                                                          10)),\n+                                                          child: Image.network(\n+                                                            data.exhibit[index]\n+                                                                .images[index],\n+                                                            fit: BoxFit.cover,\n+                                                          )),\n+                                                      10.hSpace\n+                                                    ],\n+                                                  );\n+                                                }),\n+                                          ),\n+                                        ],\n                                       ),\n                                     ),\n-                                    10.vSpace\n-                                  ],\n-                                );\n-                              }\n+                                  ),\n+                                  10.vSpace\n+                                ],\n+                              );\n                             });\n                       })),\n                 ),\n               ],\n"
                },
                {
                    "date": 1669687453705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,10 +58,11 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n-                      child: FutureBuilder(builder: (context, index) {\n-                        if (data.exhibit.isEmpty) {\n+                      child: FutureBuilder(\n+                          builder: (context, AsyncSnapshot snapshot) {\n+                        if (snapshot.data.lenght < 0) {\n                           return const CircularProgressIndicator();\n                         }\n                         return ListView.builder(\n                             shrinkWrap: true,\n"
                },
                {
                    "date": 1669687514485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,81 +59,93 @@\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       child: FutureBuilder(\n+                          future:\n+                              context.read<ExhibitionModel>().getExhibitList(),\n                           builder: (context, AsyncSnapshot snapshot) {\n-                        if (snapshot.data.lenght < 0) {\n-                          return const CircularProgressIndicator();\n-                        }\n-                        return ListView.builder(\n-                            shrinkWrap: true,\n-                            itemCount: data.exhibit.length,\n-                            itemBuilder: (BuildContext context, int index) {\n-                              return Column(\n-                                crossAxisAlignment: CrossAxisAlignment.start,\n-                                children: [\n-                                  HeaderTwo(text: data.exhibit[index].title),\n-                                  Container(\n-                                    height: context.heightPx * 0.15,\n-                                    decoration: BoxDecoration(\n-                                        color: Colors.black.withOpacity(0.06),\n-                                        borderRadius:\n-                                            BorderRadius.circular(10)),\n-                                    child: Padding(\n-                                      padding: const EdgeInsets.all(8.0),\n-                                      child: Column(\n-                                        children: [\n-                                          Expanded(\n-                                            child: ListView.builder(\n-                                                physics:\n-                                                    const AlwaysScrollableScrollPhysics(\n-                                                        parent:\n-                                                            BouncingScrollPhysics()),\n-                                                scrollDirection:\n-                                                    Axis.horizontal,\n-                                                shrinkWrap: true,\n-                                                itemCount: data.exhibit[index]\n-                                                    .images.length,\n-                                                itemBuilder:\n-                                                    (BuildContext context,\n-                                                        int index) {\n-                                                  return Row(\n-                                                    children: [\n-                                                      Container(\n-                                                          height:\n-                                                              context.heightPx *\n+                            if (snapshot.data.lenght < 0) {\n+                              return const CircularProgressIndicator();\n+                            }\n+                            return ListView.builder(\n+                                shrinkWrap: true,\n+                                itemCount: data.exhibit.length,\n+                                itemBuilder: (BuildContext context, int index) {\n+                                  return Column(\n+                                    crossAxisAlignment:\n+                                        CrossAxisAlignment.start,\n+                                    children: [\n+                                      HeaderTwo(\n+                                          text: data.exhibit[index].title),\n+                                      Container(\n+                                        height: context.heightPx * 0.15,\n+                                        decoration: BoxDecoration(\n+                                            color:\n+                                                Colors.black.withOpacity(0.06),\n+                                            borderRadius:\n+                                                BorderRadius.circular(10)),\n+                                        child: Padding(\n+                                          padding: const EdgeInsets.all(8.0),\n+                                          child: Column(\n+                                            children: [\n+                                              Expanded(\n+                                                child: ListView.builder(\n+                                                    physics:\n+                                                        const AlwaysScrollableScrollPhysics(\n+                                                            parent:\n+                                                                BouncingScrollPhysics()),\n+                                                    scrollDirection:\n+                                                        Axis.horizontal,\n+                                                    shrinkWrap: true,\n+                                                    itemCount: data\n+                                                        .exhibit[index]\n+                                                        .images\n+                                                        .length,\n+                                                    itemBuilder:\n+                                                        (BuildContext context,\n+                                                            int index) {\n+                                                      return Row(\n+                                                        children: [\n+                                                          Container(\n+                                                              height: context\n+                                                                      .heightPx *\n                                                                   0.13,\n-                                                          width:\n-                                                              //  100,\n-                                                              context.widthPx *\n-                                                                  0.25,\n-                                                          decoration: BoxDecoration(\n-                                                              color: Colors.red\n-                                                                  .withOpacity(\n-                                                                      0.6),\n-                                                              borderRadius:\n-                                                                  BorderRadius\n-                                                                      .circular(\n-                                                                          10)),\n-                                                          child: Image.network(\n-                                                            data.exhibit[index]\n-                                                                .images[index],\n-                                                            fit: BoxFit.cover,\n-                                                          )),\n-                                                      10.hSpace\n-                                                    ],\n-                                                  );\n-                                                }),\n+                                                              width:\n+                                                                  //  100,\n+                                                                  context.widthPx *\n+                                                                      0.25,\n+                                                              decoration: BoxDecoration(\n+                                                                  color: Colors\n+                                                                      .red\n+                                                                      .withOpacity(\n+                                                                          0.6),\n+                                                                  borderRadius:\n+                                                                      BorderRadius\n+                                                                          .circular(\n+                                                                              10)),\n+                                                              child:\n+                                                                  Image.network(\n+                                                                data\n+                                                                    .exhibit[\n+                                                                        index]\n+                                                                    .images[index],\n+                                                                fit: BoxFit\n+                                                                    .cover,\n+                                                              )),\n+                                                          10.hSpace\n+                                                        ],\n+                                                      );\n+                                                    }),\n+                                              ),\n+                                            ],\n                                           ),\n-                                        ],\n+                                        ),\n                                       ),\n-                                    ),\n-                                  ),\n-                                  10.vSpace\n-                                ],\n-                              );\n-                            });\n-                      })),\n+                                      10.vSpace\n+                                    ],\n+                                  );\n+                                });\n+                          })),\n                 ),\n               ],\n             ),\n           ),\n"
                },
                {
                    "date": 1669687541198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,93 +59,81 @@\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       child: FutureBuilder(\n-                          future:\n-                              context.read<ExhibitionModel>().getExhibitList(),\n                           builder: (context, AsyncSnapshot snapshot) {\n-                            if (snapshot.data.lenght < 0) {\n-                              return const CircularProgressIndicator();\n-                            }\n-                            return ListView.builder(\n-                                shrinkWrap: true,\n-                                itemCount: data.exhibit.length,\n-                                itemBuilder: (BuildContext context, int index) {\n-                                  return Column(\n-                                    crossAxisAlignment:\n-                                        CrossAxisAlignment.start,\n-                                    children: [\n-                                      HeaderTwo(\n-                                          text: data.exhibit[index].title),\n-                                      Container(\n-                                        height: context.heightPx * 0.15,\n-                                        decoration: BoxDecoration(\n-                                            color:\n-                                                Colors.black.withOpacity(0.06),\n-                                            borderRadius:\n-                                                BorderRadius.circular(10)),\n-                                        child: Padding(\n-                                          padding: const EdgeInsets.all(8.0),\n-                                          child: Column(\n-                                            children: [\n-                                              Expanded(\n-                                                child: ListView.builder(\n-                                                    physics:\n-                                                        const AlwaysScrollableScrollPhysics(\n-                                                            parent:\n-                                                                BouncingScrollPhysics()),\n-                                                    scrollDirection:\n-                                                        Axis.horizontal,\n-                                                    shrinkWrap: true,\n-                                                    itemCount: data\n-                                                        .exhibit[index]\n-                                                        .images\n-                                                        .length,\n-                                                    itemBuilder:\n-                                                        (BuildContext context,\n-                                                            int index) {\n-                                                      return Row(\n-                                                        children: [\n-                                                          Container(\n-                                                              height: context\n-                                                                      .heightPx *\n+                        if (data.exhibit.isEmpty) {\n+                          return const CircularProgressIndicator();\n+                        }\n+                        return ListView.builder(\n+                            shrinkWrap: true,\n+                            itemCount: data.exhibit.length,\n+                            itemBuilder: (BuildContext context, int index) {\n+                              return Column(\n+                                crossAxisAlignment: CrossAxisAlignment.start,\n+                                children: [\n+                                  HeaderTwo(text: data.exhibit[index].title),\n+                                  Container(\n+                                    height: context.heightPx * 0.15,\n+                                    decoration: BoxDecoration(\n+                                        color: Colors.black.withOpacity(0.06),\n+                                        borderRadius:\n+                                            BorderRadius.circular(10)),\n+                                    child: Padding(\n+                                      padding: const EdgeInsets.all(8.0),\n+                                      child: Column(\n+                                        children: [\n+                                          Expanded(\n+                                            child: ListView.builder(\n+                                                physics:\n+                                                    const AlwaysScrollableScrollPhysics(\n+                                                        parent:\n+                                                            BouncingScrollPhysics()),\n+                                                scrollDirection:\n+                                                    Axis.horizontal,\n+                                                shrinkWrap: true,\n+                                                itemCount: data.exhibit[index]\n+                                                    .images.length,\n+                                                itemBuilder:\n+                                                    (BuildContext context,\n+                                                        int index) {\n+                                                  return Row(\n+                                                    children: [\n+                                                      Container(\n+                                                          height:\n+                                                              context.heightPx *\n                                                                   0.13,\n-                                                              width:\n-                                                                  //  100,\n-                                                                  context.widthPx *\n-                                                                      0.25,\n-                                                              decoration: BoxDecoration(\n-                                                                  color: Colors\n-                                                                      .red\n-                                                                      .withOpacity(\n-                                                                          0.6),\n-                                                                  borderRadius:\n-                                                                      BorderRadius\n-                                                                          .circular(\n-                                                                              10)),\n-                                                              child:\n-                                                                  Image.network(\n-                                                                data\n-                                                                    .exhibit[\n-                                                                        index]\n-                                                                    .images[index],\n-                                                                fit: BoxFit\n-                                                                    .cover,\n-                                                              )),\n-                                                          10.hSpace\n-                                                        ],\n-                                                      );\n-                                                    }),\n-                                              ),\n-                                            ],\n+                                                          width:\n+                                                              //  100,\n+                                                              context.widthPx *\n+                                                                  0.25,\n+                                                          decoration: BoxDecoration(\n+                                                              color: Colors.red\n+                                                                  .withOpacity(\n+                                                                      0.6),\n+                                                              borderRadius:\n+                                                                  BorderRadius\n+                                                                      .circular(\n+                                                                          10)),\n+                                                          child: Image.network(\n+                                                            data.exhibit[index]\n+                                                                .images[index],\n+                                                            fit: BoxFit.cover,\n+                                                          )),\n+                                                      10.hSpace\n+                                                    ],\n+                                                  );\n+                                                }),\n                                           ),\n-                                        ),\n+                                        ],\n                                       ),\n-                                      10.vSpace\n-                                    ],\n-                                  );\n-                                });\n-                          })),\n+                                    ),\n+                                  ),\n+                                  10.vSpace\n+                                ],\n+                              );\n+                            });\n+                      })),\n                 ),\n               ],\n             ),\n           ),\n"
                },
                {
                    "date": 1669688025002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,6 @@\n-import 'package:exhibition_task/utils/extensions.dart';\n-import 'package:exhibition_task/utils/text/header_1.dart';\n-import 'package:exhibition_task/utils/text/header_2.dart';\n-import 'package:exhibition_task/view_models/exhibit_view_model.dart';\n-import 'package:flutter/material.dart';\n-import 'package:provider/provider.dart';\n+import 'package:exhibition_task/export.dart';\n \n-import '../utils/custom_widgets/custom_textfield.dart';\n-\n class HomeWithModel extends StatefulWidget {\n   const HomeWithModel({\n     super.key,\n   });\n"
                },
                {
                    "date": 1669688427240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,14 +51,11 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n-                      child: FutureBuilder(\n-                          builder: (context, AsyncSnapshot snapshot) {\n-                        if (data.exhibit.isEmpty) {\n-                          return const CircularProgressIndicator();\n-                        }\n-                        return ListView.builder(\n+                      child: \n+                     \n+                       ListView.builder(\n                             shrinkWrap: true,\n                             itemCount: data.exhibit.length,\n                             itemBuilder: (BuildContext context, int index) {\n                               return Column(\n@@ -124,9 +121,9 @@\n                                   10.vSpace\n                                 ],\n                               );\n                             });\n-                      })),\n+                    ),\n                 ),\n               ],\n             ),\n           ),\n"
                },
                {
                    "date": 1669688443999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,79 +51,74 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n-                      child: \n-                     \n-                       ListView.builder(\n-                            shrinkWrap: true,\n-                            itemCount: data.exhibit.length,\n-                            itemBuilder: (BuildContext context, int index) {\n-                              return Column(\n-                                crossAxisAlignment: CrossAxisAlignment.start,\n-                                children: [\n-                                  HeaderTwo(text: data.exhibit[index].title),\n-                                  Container(\n-                                    height: context.heightPx * 0.15,\n-                                    decoration: BoxDecoration(\n-                                        color: Colors.black.withOpacity(0.06),\n-                                        borderRadius:\n-                                            BorderRadius.circular(10)),\n-                                    child: Padding(\n-                                      padding: const EdgeInsets.all(8.0),\n-                                      child: Column(\n-                                        children: [\n-                                          Expanded(\n-                                            child: ListView.builder(\n-                                                physics:\n-                                                    const AlwaysScrollableScrollPhysics(\n-                                                        parent:\n-                                                            BouncingScrollPhysics()),\n-                                                scrollDirection:\n-                                                    Axis.horizontal,\n-                                                shrinkWrap: true,\n-                                                itemCount: data.exhibit[index]\n-                                                    .images.length,\n-                                                itemBuilder:\n-                                                    (BuildContext context,\n-                                                        int index) {\n-                                                  return Row(\n-                                                    children: [\n-                                                      Container(\n-                                                          height:\n-                                                              context.heightPx *\n-                                                                  0.13,\n-                                                          width:\n-                                                              //  100,\n-                                                              context.widthPx *\n-                                                                  0.25,\n-                                                          decoration: BoxDecoration(\n-                                                              color: Colors.red\n-                                                                  .withOpacity(\n-                                                                      0.6),\n-                                                              borderRadius:\n-                                                                  BorderRadius\n-                                                                      .circular(\n-                                                                          10)),\n-                                                          child: Image.network(\n-                                                            data.exhibit[index]\n-                                                                .images[index],\n-                                                            fit: BoxFit.cover,\n-                                                          )),\n-                                                      10.hSpace\n-                                                    ],\n-                                                  );\n-                                                }),\n-                                          ),\n-                                        ],\n-                                      ),\n+                      child: ListView.builder(\n+                          shrinkWrap: true,\n+                          itemCount: data.exhibit.length,\n+                          itemBuilder: (BuildContext context, int index) {\n+                            return Column(\n+                              crossAxisAlignment: CrossAxisAlignment.start,\n+                              children: [\n+                                HeaderTwo(text: data.exhibit[index].title),\n+                                Container(\n+                                  height: context.heightPx * 0.15,\n+                                  decoration: BoxDecoration(\n+                                      color: Colors.black.withOpacity(0.06),\n+                                      borderRadius: BorderRadius.circular(10)),\n+                                  child: Padding(\n+                                    padding: const EdgeInsets.all(8.0),\n+                                    child: Column(\n+                                      children: [\n+                                        Expanded(\n+                                          child: ListView.builder(\n+                                              physics:\n+                                                  const AlwaysScrollableScrollPhysics(\n+                                                      parent:\n+                                                          BouncingScrollPhysics()),\n+                                              scrollDirection: Axis.horizontal,\n+                                              shrinkWrap: true,\n+                                              itemCount: data\n+                                                  .exhibit[index].images.length,\n+                                              itemBuilder:\n+                                                  (BuildContext context,\n+                                                      int index) {\n+                                                return Row(\n+                                                  children: [\n+                                                    Container(\n+                                                        height:\n+                                                            context.heightPx *\n+                                                                0.13,\n+                                                        width:\n+                                                            //  100,\n+                                                            context.widthPx *\n+                                                                0.25,\n+                                                        decoration: BoxDecoration(\n+                                                            color: Colors.red\n+                                                                .withOpacity(\n+                                                                    0.6),\n+                                                            borderRadius:\n+                                                                BorderRadius\n+                                                                    .circular(\n+                                                                        10)),\n+                                                        child: Image.network(\n+                                                          data.exhibit[index]\n+                                                              .images[index],\n+                                                          fit: BoxFit.cover,\n+                                                        )),\n+                                                    10.hSpace\n+                                                  ],\n+                                                );\n+                                              }),\n+                                        ),\n+                                      ],\n                                     ),\n                                   ),\n-                                  10.vSpace\n-                                ],\n-                              );\n-                            });\n-                    ),\n+                                ),\n+                                10.vSpace\n+                              ],\n+                            );\n+                          })),\n                 ),\n               ],\n             ),\n           ),\n"
                },
                {
                    "date": 1669688529836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,74 +51,83 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n-                      child: ListView.builder(\n-                          shrinkWrap: true,\n-                          itemCount: data.exhibit.length,\n-                          itemBuilder: (BuildContext context, int index) {\n-                            return Column(\n-                              crossAxisAlignment: CrossAxisAlignment.start,\n-                              children: [\n-                                HeaderTwo(text: data.exhibit[index].title),\n-                                Container(\n-                                  height: context.heightPx * 0.15,\n-                                  decoration: BoxDecoration(\n-                                      color: Colors.black.withOpacity(0.06),\n-                                      borderRadius: BorderRadius.circular(10)),\n-                                  child: Padding(\n-                                    padding: const EdgeInsets.all(8.0),\n-                                    child: Column(\n-                                      children: [\n-                                        Expanded(\n-                                          child: ListView.builder(\n-                                              physics:\n-                                                  const AlwaysScrollableScrollPhysics(\n-                                                      parent:\n-                                                          BouncingScrollPhysics()),\n-                                              scrollDirection: Axis.horizontal,\n-                                              shrinkWrap: true,\n-                                              itemCount: data\n-                                                  .exhibit[index].images.length,\n-                                              itemBuilder:\n-                                                  (BuildContext context,\n-                                                      int index) {\n-                                                return Row(\n-                                                  children: [\n-                                                    Container(\n-                                                        height:\n-                                                            context.heightPx *\n+                      child: data.exhibit == null\n+                          ? const CircularProgressIndicator()\n+                          : ListView.builder(\n+                              shrinkWrap: true,\n+                              itemCount: data.exhibit.length,\n+                              itemBuilder: (BuildContext context, int index) {\n+                                return Column(\n+                                  crossAxisAlignment: CrossAxisAlignment.start,\n+                                  children: [\n+                                    HeaderTwo(text: data.exhibit[index].title),\n+                                    Container(\n+                                      height: context.heightPx * 0.15,\n+                                      decoration: BoxDecoration(\n+                                          color: Colors.black.withOpacity(0.06),\n+                                          borderRadius:\n+                                              BorderRadius.circular(10)),\n+                                      child: Padding(\n+                                        padding: const EdgeInsets.all(8.0),\n+                                        child: Column(\n+                                          children: [\n+                                            Expanded(\n+                                              child: ListView.builder(\n+                                                  physics:\n+                                                      const AlwaysScrollableScrollPhysics(\n+                                                          parent:\n+                                                              BouncingScrollPhysics()),\n+                                                  scrollDirection:\n+                                                      Axis.horizontal,\n+                                                  shrinkWrap: true,\n+                                                  itemCount: data.exhibit[index]\n+                                                      .images.length,\n+                                                  itemBuilder:\n+                                                      (BuildContext context,\n+                                                          int index) {\n+                                                    return Row(\n+                                                      children: [\n+                                                        Container(\n+                                                            height: context\n+                                                                    .heightPx *\n                                                                 0.13,\n-                                                        width:\n-                                                            //  100,\n-                                                            context.widthPx *\n-                                                                0.25,\n-                                                        decoration: BoxDecoration(\n-                                                            color: Colors.red\n-                                                                .withOpacity(\n-                                                                    0.6),\n-                                                            borderRadius:\n-                                                                BorderRadius\n-                                                                    .circular(\n-                                                                        10)),\n-                                                        child: Image.network(\n-                                                          data.exhibit[index]\n-                                                              .images[index],\n-                                                          fit: BoxFit.cover,\n-                                                        )),\n-                                                    10.hSpace\n-                                                  ],\n-                                                );\n-                                              }),\n+                                                            width:\n+                                                                //  100,\n+                                                                context.widthPx *\n+                                                                    0.25,\n+                                                            decoration: BoxDecoration(\n+                                                                color: Colors\n+                                                                    .red\n+                                                                    .withOpacity(\n+                                                                        0.6),\n+                                                                borderRadius:\n+                                                                    BorderRadius\n+                                                                        .circular(\n+                                                                            10)),\n+                                                            child:\n+                                                                Image.network(\n+                                                              data\n+                                                                      .exhibit[\n+                                                                          index]\n+                                                                      .images[\n+                                                                  index],\n+                                                              fit: BoxFit.cover,\n+                                                            )),\n+                                                        10.hSpace\n+                                                      ],\n+                                                    );\n+                                                  }),\n+                                            ),\n+                                          ],\n                                         ),\n-                                      ],\n+                                      ),\n                                     ),\n-                                  ),\n-                                ),\n-                                10.vSpace\n-                              ],\n-                            );\n-                          })),\n+                                    10.vSpace\n+                                  ],\n+                                );\n+                              })),\n                 ),\n               ],\n             ),\n           ),\n"
                },
                {
                    "date": 1669688657464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n+                      // ignore: unnecessary_null_comparison\n                       child: data.exhibit == null\n                           ? const CircularProgressIndicator()\n                           : ListView.builder(\n                               shrinkWrap: true,\n"
                },
                {
                    "date": 1669688693082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   final scaffoldKey = GlobalKey<ScaffoldState>();\n \n   @override\n   Widget build(BuildContext context) {\n-    return Consumer<ExhibitionModel>(builder: (context, data, _) {\n+    return Consumer<ExhibitionModel?>(builder: (context, data, _) {\n       return SafeArea(\n         child: Scaffold(\n           key: scaffoldKey,\n           // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n@@ -52,9 +52,9 @@\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       // ignore: unnecessary_null_comparison\n-                      child: data.exhibit == null\n+                      child: data!.exhibit == null\n                           ? const CircularProgressIndicator()\n                           : ListView.builder(\n                               shrinkWrap: true,\n                               itemCount: data.exhibit.length,\n"
                },
                {
                    "date": 1669688719668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   final scaffoldKey = GlobalKey<ScaffoldState>();\n \n   @override\n   Widget build(BuildContext context) {\n-    return Consumer<ExhibitionModel?>(builder: (context, data, _) {\n+    return Consumer<ExhibitionModel>(builder: (context, data, _) {\n       return SafeArea(\n         child: Scaffold(\n           key: scaffoldKey,\n           // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n@@ -52,9 +52,9 @@\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n                       // ignore: unnecessary_null_comparison\n-                      child: data!.exhibit == null\n+                      child: data.exhibit == null\n                           ? const CircularProgressIndicator()\n                           : ListView.builder(\n                               shrinkWrap: true,\n                               itemCount: data.exhibit.length,\n"
                },
                {
                    "date": 1669688753406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,9 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n-                      // ignore: unnecessary_null_comparison\n-                      child: data.exhibit == null\n+                      child: data.exhibit.isEmpty\n                           ? const CircularProgressIndicator()\n                           : ListView.builder(\n                               shrinkWrap: true,\n                               itemCount: data.exhibit.length,\n"
                },
                {
                    "date": 1669688820484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,18 +51,18 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n-                      child: data.exhibit.isEmpty\n+                      child: data.exhibit!.isEmpty\n                           ? const CircularProgressIndicator()\n                           : ListView.builder(\n                               shrinkWrap: true,\n-                              itemCount: data.exhibit.length,\n+                              itemCount: data.exhibit!.length,\n                               itemBuilder: (BuildContext context, int index) {\n                                 return Column(\n                                   crossAxisAlignment: CrossAxisAlignment.start,\n                                   children: [\n-                                    HeaderTwo(text: data.exhibit[index].title),\n+                                    HeaderTwo(text: data.exhibit![index].title),\n                                     Container(\n                                       height: context.heightPx * 0.15,\n                                       decoration: BoxDecoration(\n                                           color: Colors.black.withOpacity(0.06),\n@@ -80,10 +80,12 @@\n                                                               BouncingScrollPhysics()),\n                                                   scrollDirection:\n                                                       Axis.horizontal,\n                                                   shrinkWrap: true,\n-                                                  itemCount: data.exhibit[index]\n-                                                      .images.length,\n+                                                  itemCount: data\n+                                                      .exhibit![index]\n+                                                      .images\n+                                                      .length,\n                                                   itemBuilder:\n                                                       (BuildContext context,\n                                                           int index) {\n                                                     return Row(\n@@ -107,9 +109,9 @@\n                                                                             10)),\n                                                             child:\n                                                                 Image.network(\n                                                               data\n-                                                                      .exhibit[\n+                                                                      .exhibit![\n                                                                           index]\n                                                                       .images[\n                                                                   index],\n                                                               fit: BoxFit.cover,\n"
                },
                {
                    "date": 1669688937701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,11 +51,13 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n-                      child: data.exhibit!.isEmpty\n-                          ? const CircularProgressIndicator()\n-                          : ListView.builder(\n+                      child:\n+                          // data.exhibit!.isEmpty\n+                          //     ? const CircularProgressIndicator()\n+                          // :\n+                          ListView.builder(\n                               shrinkWrap: true,\n                               itemCount: data.exhibit!.length,\n                               itemBuilder: (BuildContext context, int index) {\n                                 return Column(\n"
                },
                {
                    "date": 1669689367873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,11 +83,12 @@\n                                                   scrollDirection:\n                                                       Axis.horizontal,\n                                                   shrinkWrap: true,\n                                                   itemCount: data\n-                                                      .exhibit![index]\n-                                                      .images\n-                                                      .length,\n+                                                          .exhibit![index]\n+                                                          .images\n+                                                          .length ??\n+                                                      3,\n                                                   itemBuilder:\n                                                       (BuildContext context,\n                                                           int index) {\n                                                     return Row(\n"
                },
                {
                    "date": 1669689381517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,12 +83,11 @@\n                                                   scrollDirection:\n                                                       Axis.horizontal,\n                                                   shrinkWrap: true,\n                                                   itemCount: data\n-                                                          .exhibit![index]\n-                                                          .images\n-                                                          .length ??\n-                                                      3,\n+                                                      .exhibit![index]\n+                                                      .images\n+                                                      .length,\n                                                   itemBuilder:\n                                                       (BuildContext context,\n                                                           int index) {\n                                                     return Row(\n"
                },
                {
                    "date": 1669689395420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,12 +82,13 @@\n                                                               BouncingScrollPhysics()),\n                                                   scrollDirection:\n                                                       Axis.horizontal,\n                                                   shrinkWrap: true,\n-                                                  itemCount: data\n-                                                      .exhibit![index]\n-                                                      .images\n-                                                      .length,\n+                                                  itemCount: 3,\n+                                                  // data\n+                                                  //     .exhibit![index]\n+                                                  //     .images\n+                                                  //     .length,\n                                                   itemBuilder:\n                                                       (BuildContext context,\n                                                           int index) {\n                                                     return Row(\n"
                },
                {
                    "date": 1669689432397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,13 +82,12 @@\n                                                               BouncingScrollPhysics()),\n                                                   scrollDirection:\n                                                       Axis.horizontal,\n                                                   shrinkWrap: true,\n-                                                  itemCount: 3,\n-                                                  // data\n-                                                  //     .exhibit![index]\n-                                                  //     .images\n-                                                  //     .length,\n+                                                  itemCount: data\n+                                                      .exhibit![index]\n+                                                      .images\n+                                                      .length,\n                                                   itemBuilder:\n                                                       (BuildContext context,\n                                                           int index) {\n                                                     return Row(\n"
                },
                {
                    "date": 1669711450161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,87 +51,88 @@\n                 20.vSpace,\n                 SingleChildScrollView(\n                   child: SizedBox(\n                       height: context.heightPx * 0.75,\n-                      child:\n-                          // data.exhibit!.isEmpty\n-                          //     ? const CircularProgressIndicator()\n-                          // :\n-                          ListView.builder(\n-                              shrinkWrap: true,\n-                              itemCount: data.exhibit!.length,\n-                              itemBuilder: (BuildContext context, int index) {\n-                                return Column(\n-                                  crossAxisAlignment: CrossAxisAlignment.start,\n-                                  children: [\n-                                    HeaderTwo(text: data.exhibit![index].title),\n-                                    Container(\n-                                      height: context.heightPx * 0.15,\n-                                      decoration: BoxDecoration(\n-                                          color: Colors.black.withOpacity(0.06),\n-                                          borderRadius:\n-                                              BorderRadius.circular(10)),\n-                                      child: Padding(\n-                                        padding: const EdgeInsets.all(8.0),\n-                                        child: Column(\n-                                          children: [\n-                                            Expanded(\n-                                              child: ListView.builder(\n-                                                  physics:\n-                                                      const AlwaysScrollableScrollPhysics(\n-                                                          parent:\n-                                                              BouncingScrollPhysics()),\n-                                                  scrollDirection:\n-                                                      Axis.horizontal,\n-                                                  shrinkWrap: true,\n-                                                  itemCount: data\n-                                                      .exhibit![index]\n-                                                      .images\n-                                                      .length,\n-                                                  itemBuilder:\n-                                                      (BuildContext context,\n-                                                          int index) {\n-                                                    return Row(\n-                                                      children: [\n-                                                        Container(\n-                                                            height: context\n-                                                                    .heightPx *\n-                                                                0.13,\n-                                                            width:\n-                                                                //  100,\n-                                                                context.widthPx *\n-                                                                    0.25,\n-                                                            decoration: BoxDecoration(\n-                                                                color: Colors\n-                                                                    .red\n-                                                                    .withOpacity(\n-                                                                        0.6),\n-                                                                borderRadius:\n-                                                                    BorderRadius\n-                                                                        .circular(\n-                                                                            10)),\n-                                                            child:\n-                                                                Image.network(\n-                                                              data\n-                                                                      .exhibit![\n-                                                                          index]\n-                                                                      .images[\n-                                                                  index],\n-                                                              fit: BoxFit.cover,\n-                                                            )),\n-                                                        10.hSpace\n-                                                      ],\n-                                                    );\n-                                                  }),\n-                                            ),\n-                                          ],\n+                      child: ListView.builder(\n+                          shrinkWrap: true,\n+                          itemCount: data.exhibit!.length,\n+                          itemBuilder: (BuildContext context, int index) {\n+                            data.exhibit!.isEmpty\n+                                ? const CircularProgressIndicator()\n+                                : Column(\n+                                    crossAxisAlignment:\n+                                        CrossAxisAlignment.start,\n+                                    children: [\n+                                      HeaderTwo(\n+                                          text: data.exhibit![index].title),\n+                                      Container(\n+                                        height: context.heightPx * 0.15,\n+                                        decoration: BoxDecoration(\n+                                            color:\n+                                                Colors.black.withOpacity(0.06),\n+                                            borderRadius:\n+                                                BorderRadius.circular(10)),\n+                                        child: Padding(\n+                                          padding: const EdgeInsets.all(8.0),\n+                                          child: Column(\n+                                            children: [\n+                                              Expanded(\n+                                                child: ListView.builder(\n+                                                    physics:\n+                                                        const AlwaysScrollableScrollPhysics(\n+                                                            parent:\n+                                                                BouncingScrollPhysics()),\n+                                                    scrollDirection:\n+                                                        Axis.horizontal,\n+                                                    shrinkWrap: true,\n+                                                    itemCount: data\n+                                                        .exhibit![index]\n+                                                        .images\n+                                                        .length,\n+                                                    itemBuilder:\n+                                                        (BuildContext context,\n+                                                            int index) {\n+                                                      return Row(\n+                                                        children: [\n+                                                          Container(\n+                                                              height: context\n+                                                                      .heightPx *\n+                                                                  0.13,\n+                                                              width:\n+                                                                  //  100,\n+                                                                  context.widthPx *\n+                                                                      0.25,\n+                                                              decoration: BoxDecoration(\n+                                                                  color: Colors\n+                                                                      .red\n+                                                                      .withOpacity(\n+                                                                          0.6),\n+                                                                  borderRadius:\n+                                                                      BorderRadius\n+                                                                          .circular(\n+                                                                              10)),\n+                                                              child:\n+                                                                  Image.network(\n+                                                                data\n+                                                                    .exhibit![\n+                                                                        index]\n+                                                                    .images[index],\n+                                                                fit: BoxFit\n+                                                                    .cover,\n+                                                              )),\n+                                                          10.hSpace\n+                                                        ],\n+                                                      );\n+                                                    }),\n+                                              ),\n+                                            ],\n+                                          ),\n                                         ),\n                                       ),\n-                                    ),\n-                                    10.vSpace\n-                                  ],\n-                                );\n-                              })),\n+                                      10.vSpace\n+                                    ],\n+                                  );\n+                          })),\n                 ),\n               ],\n             ),\n           ),\n"
                },
                {
                    "date": 1669711866254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,83 +55,72 @@\n                       child: ListView.builder(\n                           shrinkWrap: true,\n                           itemCount: data.exhibit!.length,\n                           itemBuilder: (BuildContext context, int index) {\n-                            data.exhibit!.isEmpty\n-                                ? const CircularProgressIndicator()\n-                                : Column(\n-                                    crossAxisAlignment:\n-                                        CrossAxisAlignment.start,\n-                                    children: [\n-                                      HeaderTwo(\n-                                          text: data.exhibit![index].title),\n-                                      Container(\n-                                        height: context.heightPx * 0.15,\n-                                        decoration: BoxDecoration(\n-                                            color:\n-                                                Colors.black.withOpacity(0.06),\n-                                            borderRadius:\n-                                                BorderRadius.circular(10)),\n-                                        child: Padding(\n-                                          padding: const EdgeInsets.all(8.0),\n-                                          child: Column(\n-                                            children: [\n-                                              Expanded(\n-                                                child: ListView.builder(\n-                                                    physics:\n-                                                        const AlwaysScrollableScrollPhysics(\n-                                                            parent:\n-                                                                BouncingScrollPhysics()),\n-                                                    scrollDirection:\n-                                                        Axis.horizontal,\n-                                                    shrinkWrap: true,\n-                                                    itemCount: data\n-                                                        .exhibit![index]\n-                                                        .images\n-                                                        .length,\n-                                                    itemBuilder:\n-                                                        (BuildContext context,\n-                                                            int index) {\n-                                                      return Row(\n-                                                        children: [\n-                                                          Container(\n-                                                              height: context\n-                                                                      .heightPx *\n-                                                                  0.13,\n-                                                              width:\n-                                                                  //  100,\n-                                                                  context.widthPx *\n-                                                                      0.25,\n-                                                              decoration: BoxDecoration(\n-                                                                  color: Colors\n-                                                                      .red\n-                                                                      .withOpacity(\n-                                                                          0.6),\n-                                                                  borderRadius:\n-                                                                      BorderRadius\n-                                                                          .circular(\n-                                                                              10)),\n-                                                              child:\n-                                                                  Image.network(\n-                                                                data\n-                                                                    .exhibit![\n-                                                                        index]\n-                                                                    .images[index],\n-                                                                fit: BoxFit\n-                                                                    .cover,\n-                                                              )),\n-                                                          10.hSpace\n-                                                        ],\n-                                                      );\n-                                                    }),\n-                                              ),\n-                                            ],\n-                                          ),\n+                            // data.exhibit!.isEmpty\n+                            //     ? const CircularProgressIndicator()\n+                            // :\n+                            return Column(\n+                              crossAxisAlignment: CrossAxisAlignment.start,\n+                              children: [\n+                                HeaderTwo(text: data.exhibit![index].title),\n+                                Container(\n+                                  height: context.heightPx * 0.15,\n+                                  decoration: BoxDecoration(\n+                                      color: Colors.black.withOpacity(0.06),\n+                                      borderRadius: BorderRadius.circular(10)),\n+                                  child: Padding(\n+                                    padding: const EdgeInsets.all(8.0),\n+                                    child: Column(\n+                                      children: [\n+                                        Expanded(\n+                                          child: ListView.builder(\n+                                              physics:\n+                                                  const AlwaysScrollableScrollPhysics(\n+                                                      parent:\n+                                                          BouncingScrollPhysics()),\n+                                              scrollDirection: Axis.horizontal,\n+                                              shrinkWrap: true,\n+                                              itemCount: data.exhibit![index]\n+                                                  .images.length,\n+                                              itemBuilder:\n+                                                  (BuildContext context,\n+                                                      int index) {\n+                                                return Row(\n+                                                  children: [\n+                                                    Container(\n+                                                        height:\n+                                                            context.heightPx *\n+                                                                0.13,\n+                                                        width:\n+                                                            //  100,\n+                                                            context.widthPx *\n+                                                                0.25,\n+                                                        decoration: BoxDecoration(\n+                                                            color: Colors.red\n+                                                                .withOpacity(\n+                                                                    0.6),\n+                                                            borderRadius:\n+                                                                BorderRadius\n+                                                                    .circular(\n+                                                                        10)),\n+                                                        child: Image.network(\n+                                                          data.exhibit![index]\n+                                                              .images[index],\n+                                                          fit: BoxFit.cover,\n+                                                        )),\n+                                                    10.hSpace\n+                                                  ],\n+                                                );\n+                                              }),\n                                         ),\n-                                      ),\n-                                      10.vSpace\n-                                    ],\n-                                  );\n+                                      ],\n+                                    ),\n+                                  ),\n+                                ),\n+                                10.vSpace\n+                              ],\n+                            );\n                           })),\n                 ),\n               ],\n             ),\n"
                },
                {
                    "date": 1669712239549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,11 @@\n \n   @override\n   Widget build(BuildContext context) {\n     return Consumer<ExhibitionModel>(builder: (context, data, _) {\n+      if (data.exhibit!.isEmpty) {\n+        return const SizedBox();\n+      }\n       return SafeArea(\n         child: Scaffold(\n           key: scaffoldKey,\n           // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n@@ -55,11 +58,11 @@\n                       child: ListView.builder(\n                           shrinkWrap: true,\n                           itemCount: data.exhibit!.length,\n                           itemBuilder: (BuildContext context, int index) {\n-                            // data.exhibit!.isEmpty\n-                            //     ? const CircularProgressIndicator()\n-                            // :\n+                            //  index >= 0\n+                            //       ? const CircularProgressIndicator()\n+                            //   :\n                             return Column(\n                               crossAxisAlignment: CrossAxisAlignment.start,\n                               children: [\n                                 HeaderTwo(text: data.exhibit![index].title),\n"
                },
                {
                    "date": 1669713591680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,14 +9,21 @@\n   State<HomeWithModel> createState() => _HomeWithModelState();\n }\n \n class _HomeWithModelState extends State<HomeWithModel> {\n+  late Future<dynamic> exhibitData;\n   @override\n   void initState() {\n-    context.read<ExhibitionModel>().getExhibitList();\n+    exhibitData;\n+\n+    // context.read<ExhibitionModel>().getExhibitList();\n     super.initState();\n   }\n \n+  Future initializeExhibition() async {\n+    Provider.of<ExhibitionModel>(context).getExhibitList();\n+  }\n+\n   TextEditingController searchController = TextEditingController();\n   final scaffoldKey = GlobalKey<ScaffoldState>();\n \n   @override\n"
                },
                {
                    "date": 1669713601181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n class _HomeWithModelState extends State<HomeWithModel> {\n   late Future<dynamic> exhibitData;\n   @override\n   void initState() {\n-    exhibitData;\n+    exhibitData = initializeExhibition();\n \n     // context.read<ExhibitionModel>().getExhibitList();\n     super.initState();\n   }\n"
                }
            ],
            "date": 1669680330497,
            "name": "Commit-0",
            "content": "import 'package:exhibition_task/utils/extensions.dart';\nimport 'package:exhibition_task/utils/text/header_1.dart';\nimport 'package:exhibition_task/utils/text/header_2.dart';\nimport 'package:exhibition_task/utils/text/normal_text.dart';\nimport 'package:exhibition_task/view_models/exhibit_view_model.dart';\nimport 'package:flutter/material.dart';\nimport 'package:provider/provider.dart';\n\nimport '../utils/custom_widgets/custom_textfield.dart';\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({\n    super.key,\n  });\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n  @override\n  void initState() {\n    context.read<ExhibitionModel>().getExhibitList();\n    super.initState();\n  }\n\n  TextEditingController searchController = TextEditingController();\n  final scaffoldKey = GlobalKey<ScaffoldState>();\n\n  @override\n  Widget build(BuildContext context) {\n    return SafeArea(\n      child: Scaffold(\n        key: scaffoldKey,\n        // backgroundColor: Colors.lightBlue.withOpacity(0.9),\n        body: Padding(\n          padding: const EdgeInsets.only(top: 20, right: 20, left: 20),\n          child: ListView(\n            children: <Widget>[\n              15.vSpace,\n              HeaderOne(\n                text: 'Exhibition List',\n                textAlign: TextAlign.center,\n                size: 24,\n              ),\n              CustomTextField(\n                  textInputType: TextInputType.text,\n                  textController: searchController,\n                  autoFocus: false,\n                  isPassword: false,\n                  hintText: 'Search',\n                  height: 52,\n                  suffixIcon: const Icon(\n                    Icons.search,\n                    color: Colors.black54,\n                  ),\n                  textInputAction: TextInputAction.done),\n              20.vSpace,\n              SingleChildScrollView(\n                child: SizedBox(\n                  height: context.heightPx * 0.75,\n                  child: FutureBuilder(\n                      future: context.read<ExhibitionModel>().getExhibitList(),\n                      builder: (BuildContext context, AsyncSnapshot snapshot) {\n                        if (snapshot.connectionState ==\n                            ConnectionState.waiting) {\n                          return const Center(\n                              child: CircularProgressIndicator());\n                        } else if (snapshot.hasData) {\n                          return ListView.builder(\n                              shrinkWrap: true,\n                              itemCount: snapshot.data.length,\n                              itemBuilder: (BuildContext context, int index) {\n                                return Column(\n                                  crossAxisAlignment: CrossAxisAlignment.start,\n                                  children: [\n                                    HeaderTwo(\n                                        text: snapshot.data[index]['title']),\n                                    Container(\n                                      height: context.heightPx * 0.15,\n                                      decoration: BoxDecoration(\n                                          color: Colors.black.withOpacity(0.06),\n                                          borderRadius:\n                                              BorderRadius.circular(10)),\n                                      child: Padding(\n                                        padding: const EdgeInsets.all(8.0),\n                                        child: Column(\n                                          children: [\n                                            Expanded(\n                                              child: ListView.builder(\n                                                  physics:\n                                                      const BouncingScrollPhysics(),\n                                                  scrollDirection:\n                                                      Axis.horizontal,\n                                                  shrinkWrap: true,\n                                                  itemCount: snapshot\n                                                      .data[index]['images']\n                                                      .length,\n                                                  itemBuilder:\n                                                      (BuildContext context,\n                                                          int index) {\n                                                    return Row(\n                                                      children: [\n                                                        Container(\n                                                            height: context\n                                                                    .heightPx *\n                                                                0.13,\n                                                            width:\n                                                                //  100,\n                                                                context.widthPx *\n                                                                    0.25,\n                                                            decoration: BoxDecoration(\n                                                                color: Colors\n                                                                    .red\n                                                                    .withOpacity(\n                                                                        0.6),\n                                                                borderRadius:\n                                                                    BorderRadius\n                                                                        .circular(\n                                                                            10)),\n                                                            child:\n                                                                Image.network(\n                                                              snapshot.data[\n                                                                          index]\n                                                                      ['images']\n                                                                  [index],\n                                                              fit: BoxFit.cover,\n                                                            )),\n                                                        10.hSpace\n                                                      ],\n                                                    );\n                                                  }),\n                                            ),\n                                          ],\n                                        ),\n                                      ),\n                                    ),\n                                    10.vSpace\n                                  ],\n                                );\n                              });\n                        } else if (snapshot.hasData) {\n                          return Center(\n                            child: NormalText(text: snapshot.error.toString()),\n                          );\n                        }\n                        return const SizedBox();\n                      }),\n                ),\n              ),\n            ],\n          ),\n        ),\n        floatingActionButton: FloatingActionButton(\n          onPressed: () {},\n          tooltip: 'Increment',\n          child: const Icon(Icons.add),\n        ), // This trailing comma makes auto-formatting nicer for build methods.\n      ),\n    );\n  }\n}\n"
        }
    ]
}